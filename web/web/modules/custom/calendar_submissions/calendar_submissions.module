<?php

/**
 * @file
 * Contains calendar_submissions.module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\calendar_submissions\Entity\CalendarSubmissionInterface;

/**
 * Implements hook_entity_presave().
 */
function calendar_submissions_entity_presave(EntityInterface $entity) {
  // Only act on calendar submission entities.
  if (!$entity instanceof CalendarSubmissionInterface) {
    return;
  }

  // Check if the status changed to 'approved'.
  if ($entity->hasField('status') && !$entity->isNew()) {
    $original = $entity->original ?? NULL;
    $current_status = $entity->get('status')->value;
    $original_status = $original ? $original->get('status')->value : NULL;

    // If status changed to 'approved', publish immediately to Radicale.
    if ($current_status === 'approved' && $original_status !== 'approved') {
      try {
        // Publish immediately using the same logic as the queue worker.
        $publisher = \Drupal::service('calendar_submissions.immediate_publisher');
        $publisher->publishToRadicale($entity);
        
        // Log the immediate publication.
        \Drupal::logger('calendar_submissions')->info('Calendar submission @id (@title) approved and immediately published to Radicale.', [
          '@id' => $entity->id(),
          '@title' => $entity->getTitle(),
        ]);
      } catch (\Exception $e) {
        // Log the error and re-throw to show user the error.
        \Drupal::logger('calendar_submissions')->error('Failed to immediately publish calendar submission @id to Radicale: @error', [
          '@id' => $entity->id(),
          '@error' => $e->getMessage(),
        ]);
        
        // Show user-friendly error message.
        \Drupal::messenger()->addError(t('Failed to publish event to calendar server: @error', [
          '@error' => $e->getMessage(),
        ]));
        
        // Re-throw to prevent the save if publishing fails.
        throw $e;
      }
    }
  }
}

/**
 * Implements hook_cron().
 */
function calendar_submissions_cron() {
  // Process up to 5 queue items per cron run.
  $queue_manager = \Drupal::service('calendar_submissions.queue_manager');
  $processed = $queue_manager->processQueue(5);
  
  if ($processed > 0) {
    \Drupal::logger('calendar_submissions')->info('Processed @count calendar submission queue items during cron.', [
      '@count' => $processed,
    ]);
  }
}
